Texture2D shaderTexture;
SamplerState sampleType;

cbuffer LightBuffer{
    float4 diffuseColor;
    float3 lightDirection;
    float padding;
};

struct PixelInputType{
    float4 position: SV_POSITION;
    float2 texCoord: TEXCOORD0;
    float3 normal: NORMAL;
};

float4 LightPixelShader(PixelInputType input):SV_TARGET{
    float4 textureColor;
    float3 lightDir;
    float lightLntensity;
    float4 color;

    textureColor = shaderTexture.Sample(sampleType, input.texCoord);

    lightDir = -lightDirection;

    //Clamps the specified value within the range of 0 to 1.
    lightLntensity = saturate(dot(input.normal, lightDir));

    color = saturate(diffuseColor*lightLntensity);
    color *= textureColor;

    return color;
}